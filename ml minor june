{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ml minor june","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMWjhhj6we4So34+6/aHWCI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":[""],"metadata":{"id":"KGGp2y9TGpRR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Perform classification analysis to predict how many people survived the titanic disaster \n","#using Logistic regression for the given dataset.Also plot visuals by using Matplotlib/Seaborn data visualization comparing the different \n","#features of the input parameters and do Exploratory data analysis (EDA) by using \n","#pandas."],"metadata":{"id":"yq-23xWTGFNs"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3QcjOEOh_oPC"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from seaborn import load_dataset # this method will help us to #download the Titanic dataset\n","plt.style.use('ggplot') # check for more with plt.style.available"]},{"cell_type":"code","source":["data = load_dataset(\"titanic\")\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"u5F7UMkE_vsJ","executionInfo":{"status":"ok","timestamp":1658729745150,"user_tz":-330,"elapsed":1384,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"70870394-d807-4bd0-ca79-9b5257418660"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     survived  pclass     sex   age  sibsp  parch     fare embarked   class  \\\n","0           0       3    male  22.0      1      0   7.2500        S   Third   \n","1           1       1  female  38.0      1      0  71.2833        C   First   \n","2           1       3  female  26.0      0      0   7.9250        S   Third   \n","3           1       1  female  35.0      1      0  53.1000        S   First   \n","4           0       3    male  35.0      0      0   8.0500        S   Third   \n","..        ...     ...     ...   ...    ...    ...      ...      ...     ...   \n","886         0       2    male  27.0      0      0  13.0000        S  Second   \n","887         1       1  female  19.0      0      0  30.0000        S   First   \n","888         0       3  female   NaN      1      2  23.4500        S   Third   \n","889         1       1    male  26.0      0      0  30.0000        C   First   \n","890         0       3    male  32.0      0      0   7.7500        Q   Third   \n","\n","       who  adult_male deck  embark_town alive  alone  \n","0      man        True  NaN  Southampton    no  False  \n","1    woman       False    C    Cherbourg   yes  False  \n","2    woman       False  NaN  Southampton   yes   True  \n","3    woman       False    C  Southampton   yes  False  \n","4      man        True  NaN  Southampton    no   True  \n","..     ...         ...  ...          ...   ...    ...  \n","886    man        True  NaN  Southampton    no   True  \n","887  woman       False    B  Southampton   yes   True  \n","888  woman       False  NaN  Southampton    no  False  \n","889    man        True    C    Cherbourg   yes   True  \n","890    man        True  NaN   Queenstown    no   True  \n","\n","[891 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-877fde0e-302e-45d1-80f4-aa63f60d6a21\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13.0000</td>\n","      <td>S</td>\n","      <td>Second</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>B</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>23.4500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7500</td>\n","      <td>Q</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Queenstown</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>891 rows Ã— 15 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-877fde0e-302e-45d1-80f4-aa63f60d6a21')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-877fde0e-302e-45d1-80f4-aa63f60d6a21 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-877fde0e-302e-45d1-80f4-aa63f60d6a21');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wZBD671z_4_B","executionInfo":{"status":"ok","timestamp":1658729767874,"user_tz":-330,"elapsed":741,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"68dc4c2a-a4fa-4d6c-f021-d9ee9ff08d15"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype   \n","---  ------       --------------  -----   \n"," 0   survived     891 non-null    int64   \n"," 1   pclass       891 non-null    int64   \n"," 2   sex          891 non-null    object  \n"," 3   age          714 non-null    float64 \n"," 4   sibsp        891 non-null    int64   \n"," 5   parch        891 non-null    int64   \n"," 6   fare         891 non-null    float64 \n"," 7   embarked     889 non-null    object  \n"," 8   class        891 non-null    category\n"," 9   who          891 non-null    object  \n"," 10  adult_male   891 non-null    bool    \n"," 11  deck         203 non-null    category\n"," 12  embark_town  889 non-null    object  \n"," 13  alive        891 non-null    object  \n"," 14  alone        891 non-null    bool    \n","dtypes: bool(2), category(2), float64(2), int64(4), object(5)\n","memory usage: 80.7+ KB\n"]}]},{"cell_type":"code","source":["columns = ['alive', 'alone', 'embark_town', 'who', 'adult_male', 'deck']\n","data_2 = data.drop(columns, axis=1)"],"metadata":{"id":"bJNb0aR6_9-n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_2.describe(include='all').T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"Yk11nkArAEQJ","executionInfo":{"status":"ok","timestamp":1658729826666,"user_tz":-330,"elapsed":20,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"0f0c5f56-646c-4bd2-b5b1-145d8b85f599"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          count unique    top freq       mean        std   min     25%  \\\n","survived  891.0    NaN    NaN  NaN   0.383838   0.486592   0.0     0.0   \n","pclass    891.0    NaN    NaN  NaN   2.308642   0.836071   1.0     2.0   \n","sex         891      2   male  577        NaN        NaN   NaN     NaN   \n","age       714.0    NaN    NaN  NaN  29.699118  14.526497  0.42  20.125   \n","sibsp     891.0    NaN    NaN  NaN   0.523008   1.102743   0.0     0.0   \n","parch     891.0    NaN    NaN  NaN   0.381594   0.806057   0.0     0.0   \n","fare      891.0    NaN    NaN  NaN  32.204208  49.693429   0.0  7.9104   \n","embarked    889      3      S  644        NaN        NaN   NaN     NaN   \n","class       891      3  Third  491        NaN        NaN   NaN     NaN   \n","\n","              50%   75%       max  \n","survived      0.0   1.0       1.0  \n","pclass        3.0   3.0       3.0  \n","sex           NaN   NaN       NaN  \n","age          28.0  38.0      80.0  \n","sibsp         0.0   1.0       8.0  \n","parch         0.0   0.0       6.0  \n","fare      14.4542  31.0  512.3292  \n","embarked      NaN   NaN       NaN  \n","class         NaN   NaN       NaN  "],"text/html":["\n","  <div id=\"df-9d5fa313-79c4-4c52-ab45-a6421295c6ca\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>unique</th>\n","      <th>top</th>\n","      <th>freq</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>survived</th>\n","      <td>891.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.383838</td>\n","      <td>0.486592</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>pclass</th>\n","      <td>891.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.308642</td>\n","      <td>0.836071</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>891</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>577</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>714.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>29.699118</td>\n","      <td>14.526497</td>\n","      <td>0.42</td>\n","      <td>20.125</td>\n","      <td>28.0</td>\n","      <td>38.0</td>\n","      <td>80.0</td>\n","    </tr>\n","    <tr>\n","      <th>sibsp</th>\n","      <td>891.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.523008</td>\n","      <td>1.102743</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>parch</th>\n","      <td>891.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.381594</td>\n","      <td>0.806057</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>fare</th>\n","      <td>891.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>32.204208</td>\n","      <td>49.693429</td>\n","      <td>0.0</td>\n","      <td>7.9104</td>\n","      <td>14.4542</td>\n","      <td>31.0</td>\n","      <td>512.3292</td>\n","    </tr>\n","    <tr>\n","      <th>embarked</th>\n","      <td>889</td>\n","      <td>3</td>\n","      <td>S</td>\n","      <td>644</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>class</th>\n","      <td>891</td>\n","      <td>3</td>\n","      <td>Third</td>\n","      <td>491</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d5fa313-79c4-4c52-ab45-a6421295c6ca')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9d5fa313-79c4-4c52-ab45-a6421295c6ca button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9d5fa313-79c4-4c52-ab45-a6421295c6ca');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["print(f\"Max value of age column : {data_2['age'].max()}\")\n","print(f\"Min value of age column : {data_2['age'].min()}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0dr_dyCCALwt","executionInfo":{"status":"ok","timestamp":1658729872539,"user_tz":-330,"elapsed":498,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"d453bce7-0da6-44e2-de10-bcde340318e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Max value of age column : 80.0\n","Min value of age column : 0.42\n"]}]},{"cell_type":"code","source":["bins = [0, 5, 17, 25, 50, 80]\n","labels = ['Infant', 'Kid', 'Young', 'Adult', 'Old']\n","data_2['age'] = pd.cut(data_2['age'], bins = bins, labels=labels)"],"metadata":{"id":"dCNlpkhdAXbZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.DataFrame(data_2['age'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DyYrg70_AZE8","executionInfo":{"status":"ok","timestamp":1658729910028,"user_tz":-330,"elapsed":537,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"c6532fe2-70b9-4980-bbfb-8a0d04d34f7f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        age\n","Adult   349\n","Young   188\n","Kid      69\n","Old      64\n","Infant   44"],"text/html":["\n","  <div id=\"df-6cf8adda-356a-418e-9609-e35cc7e46e04\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Adult</th>\n","      <td>349</td>\n","    </tr>\n","    <tr>\n","      <th>Young</th>\n","      <td>188</td>\n","    </tr>\n","    <tr>\n","      <th>Kid</th>\n","      <td>69</td>\n","    </tr>\n","    <tr>\n","      <th>Old</th>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>Infant</th>\n","      <td>44</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cf8adda-356a-418e-9609-e35cc7e46e04')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6cf8adda-356a-418e-9609-e35cc7e46e04 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6cf8adda-356a-418e-9609-e35cc7e46e04');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data_3 = data_2.fillna({'embarked' : 'S'})"],"metadata":{"id":"iknw_41vBmaI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_2['embarked'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"okCNs8WZB0Mp","executionInfo":{"status":"ok","timestamp":1658730328839,"user_tz":-330,"elapsed":648,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"764bc4e5-e31a-4a96-a0f6-15c181f7817f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['S', 'C', 'Q', nan], dtype=object)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["print(f\"How many 'S' on embarked column : {data_2[data_2['embarked'] == 'S'].shape[0]}\")\n","print(f\"How many 'C' on embarked column : {data_2[data_2['embarked'] == 'C'].shape[0]}\")\n","print(f\"How many 'Q' on embarked column : {data_2[data_2['embarked'] == 'Q'].shape[0]}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R8Jy8I7gCD79","executionInfo":{"status":"ok","timestamp":1658730352752,"user_tz":-330,"elapsed":620,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"cf201ec8-31ae-44a5-ea5b-6b930cf2426f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["How many 'S' on embarked column : 644\n","How many 'C' on embarked column : 168\n","How many 'Q' on embarked column : 77\n"]}]},{"cell_type":"code","source":["data_3 = data_2.fillna({'embarked' : 'S'})\n"],"metadata":{"id":"jcoOIzE4CJfn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.DataFrame(data_3['age'].mode())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"k77xstSDChFt","executionInfo":{"status":"ok","timestamp":1658730584742,"user_tz":-330,"elapsed":667,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"9a868ef3-25c2-4a2b-bf6c-875db2dbe012"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     age\n","0  Adult"],"text/html":["\n","  <div id=\"df-f5076432-fa29-4b2d-8f99-18d31ff8377b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adult</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5076432-fa29-4b2d-8f99-18d31ff8377b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f5076432-fa29-4b2d-8f99-18d31ff8377b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f5076432-fa29-4b2d-8f99-18d31ff8377b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["data_4 = data_3.fillna({'age' : data_3['age'].mode()[0]})"],"metadata":{"id":"Jx6gNsZJDJmB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_2['embarked'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J4aNajfNDPBl","executionInfo":{"status":"ok","timestamp":1658730644198,"user_tz":-330,"elapsed":493,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"8da85428-0d45-4367-cecd-a3dbc28e0c29"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['S', 'C', 'Q', nan], dtype=object)"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["data_3 = data_2.fillna({'embarked' : 'S'})"],"metadata":{"id":"zzGDpzXBDWTa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_4[['pclass', 'survived']].groupby(['pclass']).sum().sort_values(by='survived')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"UOdrreP6DYS_","executionInfo":{"status":"ok","timestamp":1658730699510,"user_tz":-330,"elapsed":528,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"583c2193-64df-4b2e-d8da-24c0ed54be72"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        survived\n","pclass          \n","2             87\n","3            119\n","1            136"],"text/html":["\n","  <div id=\"df-4d992327-2be5-47c9-9a75-8cb8f79a6224\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","    </tr>\n","    <tr>\n","      <th>pclass</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>119</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>136</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d992327-2be5-47c9-9a75-8cb8f79a6224')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4d992327-2be5-47c9-9a75-8cb8f79a6224 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4d992327-2be5-47c9-9a75-8cb8f79a6224');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["data_4[['sex', 'survived']].groupby(['sex']).sum().sort_values(by='survived')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"OMd084E3Dgxo","executionInfo":{"status":"ok","timestamp":1658730721290,"user_tz":-330,"elapsed":773,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"058553fe-805d-4974-fa16-3aaf64549282"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        survived\n","sex             \n","male         109\n","female       233"],"text/html":["\n","  <div id=\"df-1ebbf25a-7d4e-45e2-809f-647f80874480\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>male</th>\n","      <td>109</td>\n","    </tr>\n","    <tr>\n","      <th>female</th>\n","      <td>233</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ebbf25a-7d4e-45e2-809f-647f80874480')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1ebbf25a-7d4e-45e2-809f-647f80874480 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1ebbf25a-7d4e-45e2-809f-647f80874480');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["bins = [-1, 7.9104, 14.4542, 31, 512.330]\n"],"metadata":{"id":"EIXdfF2ODj09"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_5 = data_4.drop('class', axis=1)"],"metadata":{"id":"_G5QgASUEGxO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.distplot(data_5['survived'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"CVdr9huBELtl","executionInfo":{"status":"ok","timestamp":1658730892248,"user_tz":-330,"elapsed":729,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"308784b7-f621-424d-d09a-5d154491465b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd144deac10>"]},"metadata":{},"execution_count":29},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.figure(figsize=(20, 10))\n","plt.subplot(321)\n","sns.barplot(x = 'sibsp', y = 'survived', data = data_5)\n","plt.subplot(322)\n","sns.barplot(x = 'fare', y = 'survived', data = data_5)\n","plt.subplot(323)\n","sns.barplot(x = 'pclass', y = 'survived', data = data_5)\n","plt.subplot(324)\n","sns.barplot(x = 'age', y = 'survived', data = data_5)\n","plt.subplot(325)\n","sns.barplot(x = 'sex', y = 'survived', data = data_5)\n","plt.subplot(326)\n","sns.barplot(x = 'embarked', y = 'survived', data = data_5);\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":626},"id":"350EIHMdEQrE","executionInfo":{"status":"ok","timestamp":1658730932311,"user_tz":-330,"elapsed":9557,"user":{"displayName":"Harish Harish","userId":"15917382092479607065"}},"outputId":"3ca4f331-588d-42d8-cba5-33bec3361370"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x720 with 6 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]}]}